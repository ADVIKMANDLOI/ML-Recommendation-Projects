# -*- coding: utf-8 -*-
"""Movie recommendation ML project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15uhSDmSKx0fEVGF2-stiBw6MsneuNz_3

Import Libraries
"""

import numpy as np
import pandas as pd
import difflib
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

"""Loading dataset"""

from google.colab import files
uploaded = files.upload()

movies_data = pd.read_csv('movies.csv')  # Match file name with your upload
movies_data.head()

"""Display shape &info"""

print(movies_data.shape)
print(movies_data.info())

"""Select relevant features"""

selected_features = ['genres', 'keywords', 'tagline', 'cast', 'director']
movies_data[selected_features].head()

"""To handle missing values"""

for feature in selected_features:
    movies_data[feature] = movies_data[feature].fillna('')

"""Combine features"""

combined_features = movies_data['genres'] + ' ' + movies_data['keywords'] + ' ' + movies_data['tagline'] + ' ' + movies_data['cast'] + ' ' + movies_data['director']

"""Convert to TF-IDF vertors"""

vectorizer = TfidfVectorizer()
feature_vectors = vectorizer.fit_transform(combined_features)

"""Compute cosine similarity"""

similarity = cosine_similarity(feature_vectors)

"""Movie recommendation logic"""

movie_name = input("Enter your favourite movie name: ")

list_of_all_titles = movies_data['title'].tolist()
find_close_match = difflib.get_close_matches(movie_name, list_of_all_titles)
close_match = find_close_match[0]

index_of_the_movie = movies_data[movies_data.title == close_match]['index'].values[0]

similarity_score = list(enumerate(similarity[index_of_the_movie]))
sorted_similar_movies = sorted(similarity_score, key=lambda x: x[1], reverse=True)

print("Movies suggested for you:\n")

i = 1
for movie in sorted_similar_movies:
    index = movie[0]
    title_from_index = movies_data[movies_data.index == index]['title'].values[0]
    if i < 30:
        print(i, '.', title_from_index)
        i += 1